{"ast":null,"code":"var _jsxFileName = \"/Users/mdm/Desktop/recipe-app/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer';\nimport { diet_type, health_restrictions, meal_type, dish_type, cuisine_type } from './data';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport Recipe from './Recipe';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const API_ID = process.env.REACT_APP_API_ID;\n  const API_KEY = process.env.REACT_APP_API_KEY;\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('');\n  useEffect(() => {\n    const getRecipes = async () => {\n      const resp = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${API_ID}&app_key=${API_KEY}`);\n      const data = await resp.json();\n      setRecipes(data.hits);\n    };\n\n    getRecipes();\n  }, [query, API_ID, API_KEY]);\n  const INITIAL_STATE = {\n    main_ingredient: '',\n    diet_type: '',\n    health_restrictions: '',\n    cuisine_type: '',\n    meal_type: '',\n    dish_type: '',\n    min_calories: '',\n    max_calories: '',\n    min_prep: '',\n    max_prep: '',\n    excluded: ''\n  };\n  const [formData, setFormData] = useState(INITIAL_STATE);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(data => ({ ...data,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setFormData(INITIAL_STATE);\n  };\n\n  const animatedComponents = makeAnimated();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-25\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Main Ingredient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"main_ingredient\",\n            type: \"text\",\n            name: \"main_ingredient\",\n            value: formData.main_ingredient,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipes\",\n        children: recipes.map((recipe, index) => {\n          /*#__PURE__*/\n          _jsxDEV(Recipe, {\n            title: recipe.recipe.label,\n            calories: recipe.recipe.calories,\n            image: recipe.recipe.image\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"xVAhALeXUTQx28OrfxLZlbVKV0E=\");\n\n_c = Home;\n;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/mdm/Desktop/recipe-app/src/Home.js"],"names":["React","useState","useEffect","Link","Header","Footer","diet_type","health_restrictions","meal_type","dish_type","cuisine_type","Select","makeAnimated","Recipe","Home","API_ID","process","env","REACT_APP_API_ID","API_KEY","REACT_APP_API_KEY","recipes","setRecipes","search","setSearch","query","setQuery","getRecipes","resp","fetch","data","json","hits","INITIAL_STATE","main_ingredient","min_calories","max_calories","min_prep","max_prep","excluded","formData","setFormData","handleChange","e","name","value","target","handleSubmit","preventDefault","animatedComponents","map","recipe","index","label","calories","image"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer';\nimport {\n  diet_type,\n  health_restrictions,\n  meal_type,\n  dish_type,\n  cuisine_type\n  } from './data';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport Recipe from './Recipe';\n\nfunction Home () {\n\n  const API_ID = process.env.REACT_APP_API_ID;\n  const API_KEY = process.env.REACT_APP_API_KEY;\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('')\n\n\n  useEffect(() => {\n    const getRecipes = async () => {\n      const resp = await fetch(\n        `https://api.edamam.com/search?q=${query}&app_id=${API_ID}&app_key=${API_KEY}`);\n      const data = await resp.json();\n      setRecipes(data.hits);\n    };\n    getRecipes();\n  }, [query, API_ID, API_KEY]);  \n\n  const INITIAL_STATE = {\n    main_ingredient: '',\n    diet_type: '',\n    health_restrictions: '',\n    cuisine_type: '',\n    meal_type: '',\n    dish_type: '',\n    min_calories: '',\n    max_calories: '',\n    min_prep: '',\n    max_prep: '',\n    excluded: ''\n  };\n\n  const [formData, setFormData] = useState(INITIAL_STATE);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((data) => ({\n      ...data,\n      [name] : value\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setFormData(INITIAL_STATE)\n  };\n\n  const animatedComponents = makeAnimated();\n  \n  return (\n    <div className=\"App\">\n      <Header />\n        <div className=\"container\">\n          \n          <div className=\"row\">\n            <div className=\"col-25\">\n            <label>Main Ingredient</label>\n              <input\n                id='main_ingredient'\n                type='text'\n                name='main_ingredient'\n                value={formData.main_ingredient}\n                onChange={handleChange}\n                required/>\n            </div>\n          </div>\n          \n    \n          <div className=\"recipes\">\n          {recipes.map((recipe, index) => {\n            <Recipe\n              key={index}\n              title={recipe.recipe.label}\n              calories={recipe.recipe.calories}\n              image={recipe.recipe.image}\n            />\n          })}\n          </div>\n        </div>\n      <Footer />\n    </div>\n  )\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}